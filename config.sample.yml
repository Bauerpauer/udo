# Sample cluster configuration for AWS


# what's your awesome application or company called?
app_name: myapp


# your yum repo that houses your RPMs
repo:
    # use yum-s3-iam plugin to access our private s3 repo with an instance role
    plugin_url: https://s3-us-west-2.amazonaws.com/myapp-pub/provision/yum-plugin-s3-iam-1.0-1.noarch.rpm
    # yum repo file
    url: https://s3-us-west-2.amazonaws.com/myapp-pub/myapp.repo

### global defaults for all clusters/roles
region: 'us-west-2'  # what region are we working in here? (Oregon, yo)
ami: 'ami-a99deb89'  # AMI to use for all instances (unless overridden)
packages:            # common packages to install for all instances
    - 'myapp-base'

# optional: slack integration webhook
slack:
    url: https://myapp.slack.com/services/hooks/incoming-webhook?token=Zgasdlgj0ioj30tj
    username: UdoBot
    channel: '#notdevops'

# add some additional cloud-init script commands
# (see script/cloud-init.sh)
cloud_init: |
    touch /root/myapp_init
    gem install sass

# cluster = set of AWS resources managed as a group
# (instances, ASgroup, launchconfigs, all in a VPC)
clusters:
    # create a "development" cluster
    dev:
        # human-readable name
        description: "Development"
        # yum packages to install
        packages:
            - 'myapp-prov-dev'
            - 'myapp-cfg-dev'
        keypair_name: 'dev'
        subnet_cidr: '10.1.0.0/16'
        # for instance roles
        iam_profile: 'developer'
        # application roles for instances
        # think: sub-clusters that can be managed as distinct sets
        roles:
            webapp:
                instance_type: 'm1.medium'
                scale_policy:
                    min_size: 1
                    max_size: 3
                    desired: 2
                elbs:
                    - 'dev-https'
                security_groups:
                    - 'sg-abcdef123'  # you'll want to set this up manually
                packages:
                    - 'myapp-app'
                    - 'myapp-app-deps'
                    - 'myapp-app-core'
                    - 'myapp-static'
                tags:
                    'myapp-web-workers': 10
            worker:
                instance_type: 'm1.medium'
                packages:
                    - 'myapp-schwartz-worker'
                    - 'myapp-daemon-worker'
                scale_policy:
                    min_size: 1
                    max_size: 4
                    desired: 1
    qa:
        # ...
    stage:
        # ...
    prod:
        # ...